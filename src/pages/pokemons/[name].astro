---
import type { GetStaticPaths } from "astro";
import type { PokemonListResponse } from "@intefaces/pokemon-list.response";

import { Icon } from 'astro-icon/components'

import MainLayout from "@layouts/MainLayout.astro";
import Title from "@components/shared/Title.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";

export const getStaticPaths = (async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await resp.json()) as PokemonListResponse;

  return results.map(({ name, url }) => ({
    params: { name: name },
    props: { name: name, url: url },
  }));

  // return [
  //     {
  //         params: { name: 'bulbasaur'},
  //         props: { name: 'bulbasaur', url: "https://pokeapi.co/api/v2/pokemon/1/" }
  //     },
  // ];
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const id = url.split("/").at(-2);

const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<MainLayout
  title={`Pokémon - #${id} ${name}`}
  description={`Informacion sobre el pokémon ${name}`}
  image={imageSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">

    <div class="flex flex-row">
      <div>
        <!-- <a href="/">Regresar</a> -->
        <button onclick="history.back()" class="text-blue-500">Regresar</button>
        <Title>{name}</Title>
      </div>
  
      <button id="btn-favorite" class="ml-4 hover:animate-pulse" data-name={name} data-id={id}>
        <Icon data-outline name="IconHeartOutline" size={40}/>
        <Icon data-filled class="hidden text-red-500" name="IconHeartFilled" size={40}/>
      </button>
    </div>

    <PokemonCard name={name} url={url} isBig />

    <audio controls class="mt-5">
      <source src={audioSrc} type="audio/ogg" />
      Su navegador no soporta el elemento audio.
    </audio>
  </section>
</MainLayout>

<script>

  import type { FavoritePokemon } from '@intefaces/favorite-pokemon'

  // interface FavoritePokemons {
  //   name: string,
  //   id: number;
  // }

  const handlePageLoad = () => {

    let favoritePokemons: FavoritePokemon[] = JSON.parse(
      localStorage.getItem('favorites') ?? '[]'
    )

    const btnFavorite = document.querySelector('#btn-favorite') as HTMLButtonElement;

    if ( !btnFavorite ) return;

    const name = btnFavorite.dataset.name ?? '';
    const id = btnFavorite.dataset.id ?? '';
    const isFavorite = favoritePokemons.some(fav => fav.name === name);

    const heartOutline = btnFavorite.querySelector('[data-outline]') as HTMLElement;
    const heartFilled = btnFavorite.querySelector('[data-filled]') as HTMLElement;



    if ( isFavorite ) {
      heartOutline.classList.add('hidden');
      heartFilled.classList.remove('hidden');
    }



  
    const toggleFavorite = () => {
      const isFavorite = favoritePokemons.some(fav => fav.name === name);

      if ( isFavorite ) {
        // Remover 
        favoritePokemons = favoritePokemons.filter( fav => fav.name !== name);
      } else {
        // Agregar 
        favoritePokemons.push({
          id: +id,
          name: name
        });
      }

      localStorage.setItem('favorites', JSON.stringify(favoritePokemons));

    }


    btnFavorite.addEventListener('click', () => {
      
      heartOutline.classList.toggle('hidden');
      heartFilled.classList.toggle('hidden');

      toggleFavorite();

    });
  }


  document.addEventListener('astro:page-load', handlePageLoad)



</script>